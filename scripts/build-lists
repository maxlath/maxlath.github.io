#!/usr/bin/env node
const buildList = require('../lib/build_list')
const { updateFile } = require('../lib/update_part')
const buildIndex = require('../lib/build_index')
const buildHead = require('../lib/build_head')
const wrapList = require('../lib/wrap_list')
const _ = require('../lib/utils')
const { sections, sectionsList } = require('config')
const marked = require('marked')
const buildTagsList = require('../lib/build_tags_list')

const [ fast ] = process.argv.slice(2)
if (fast) _.warn('fast mode: not compiling tags')

const itemsListsContent = sectionsList
  .map(section => {
    // build list
    const html = buildList(section)
    const data = _.getFolderData(section)
    // build sub indexes / SIDE EFFECT /
    buildIndex(section, html)
    // wrap lists for main index
    return wrapList(html, 2, data, `/${section}`)
  }).join('\n')

const tagsListHtml = fast ? null : buildTagsList()

// HOME
let index = _.readFileSync('./content.md')
const tabs = _.readFileSync('./partials/tabs.html')
const links = _.readFileSync('./partials/links.md')
const about = _.readFileSync('./partials/about.md')
const data = _.getFolderData('.')
const head = buildHead(data)
// add wrap lists to main index
index = updateFile(index, head, 'head')
index = updateFile(index, tabs, 'tabs')
index = updateFile(index, itemsListsContent, 'itemslists')
ifÂ (!fast) { index = updateFile(index, tagsListHtml, 'tags') }
index = updateFile(index, links, 'links')
index = updateFile(index, about, 'about', true)

if (index.length > 0) {
  console.log('writing home index.html')
  _.writeFile('./index.html', index)
} else {
  console.log('updated index is empty'.red)
}
