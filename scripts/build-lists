#!/usr/bin/env coffee

buildList = require '../lib/build_list'
{ updateFile } = require '../lib/update_part'
buildIndex = require '../lib/build_index'
wrapList = require '../lib/wrap_list'
{ getTagsLists, buildTag } = require '../lib/build_tags'
_ = require '../lib/utils'
{ sections, sectionsList } = require 'config'
marked = require 'marked'

itemsListsContent = sectionsList
  .map (section)->
    # build list
    html = buildList section
    data = _.getFolderData section
    # build sub indexes / SIDE EFFECT /
    buildIndex section, html
    # wrap lists for main index
    return wrapList html, 2, data, "/#{section}"
  .join '\n'


# TAGS

# has to run after build_list passed all the items through spreadByTags
tagsList = getTagsLists()

tagsList.forEach (tagData)->
  { tag, items, data } = tagData
  folder = "tags/#{tag}"
  innerList = items
    .sort _.sortByDescendingDate
    .map _.property('html')
    .join '\n'

  { fullTitle, description, image } = data

  tagHeader = ''
  # if fullTitle?
    # fullTitle = marked fullTitle
    # tagHeader += "<h2 class='full-title'>#{fullTitle}</h2>"
  if image? then tagHeader += "<img class='cover' src='#{image}' alt='#{fullTitle}'>"
  if description?
    description = marked description
    tagHeader += "<p class='description'>#{description}</p>"

  listHtml = """
    <div class='tag-context'>#{tagHeader}</div>
    <h3>related items:</h3>
    <ul>#{innerList}</ul>
  """
  buildIndex folder, listHtml, 'tags'

innerTagsListHtml = tagsList
  # why a.data.count < b.data.count doesnt sort properly is a mistery
  # this solution with reverse works though
  .sort (a, b)-> a.data.count > b.data.count
  .reverse()
  .map (tagData)->
    { tag, data } = tagData
    { title, count, url } = data
    return buildTag tag, count

  .join '\n'

tagsListHtml = "<ul>#{innerTagsListHtml}</ul>"
buildIndex 'tags', tagsListHtml


# HOME
index = _.readFileSync './content.md'
links = _.readFileSync './partials/links.md'
# add wrap lists to main index
index = updateFile index, itemsListsContent, 'itemslists'
index = updateFile index, tagsListHtml, 'tags'
index = updateFile index, links, 'links'
if index.length > 0
  console.log 'writing home index.html'
  _.writeFile './index.html', index
else
  console.log 'updated index is empty'.red
